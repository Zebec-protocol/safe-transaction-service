version: '3.5'

volumes:
  nginx-shared:

services:
  nginx:
    image: nginx:alpine
    hostname: nginx
    ports:
      - "8000:8000"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx-shared:/nginx
    depends_on:
      - web

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    command:
      - --appendonly yes

  rabbitmq:
    image: rabbitmq:alpine

  db:
    image: postgres:13-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

  web:
    build:
      context: .
      dockerfile: docker/web/Dockerfile
    env_file:
      - .env
    depends_on:
      - db
      - redis
    working_dir: /app
    ports:
      - "8888:8888"
    volumes:
      - nginx-shared:/nginx
    command: chmod +x ./docker/web/run_web.sh && ./docker/web/run_web.sh

  indexer-worker: &worker
    build:
      context: .
      dockerfile: docker/web/Dockerfile
    env_file:
      - .env
    environment:
      RUN_MIGRATIONS: 1
      WORKER_QUEUES: "default,indexing"
    depends_on:
      - db
      - redis
      - rabbitmq
    command: celery -C -A config.celery_app worker --loglevel debug --pool=gevent --concurrency=${CELERYD_CONCURRENCY-1000} --max-memory-per-child=${MAX_MEMORY_PER_CHILD-2097152} --max-tasks-per-child=${MAX_TASKS_PER_CHILD-1000000} -Q "$WORKER_QUEUES"

  contracts-tokens-worker:
    <<: *worker
    environment:
      WORKER_QUEUES: "contracts,tokens"

  notifications-webhooks-worker:
    <<: *worker
    environment:
      WORKER_QUEUES: "notifications,webhooks"

  scheduler:
    <<: *worker
    command: celery -C -A config.celery_app beat -S django_celery_beat.schedulers:DatabaseScheduler --loglevel debug

  flower:
    <<: *worker
    command: celery -C -A config.celery_app flower
    ports:
      - "5555:5555"

